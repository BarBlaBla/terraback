import numpy as np
from flask import Flask, request, jsonify, render_template
import pickle
import math
import pandas as pd
from flask_cors import CORS, cross_origin

app = Flask(__name__)
cors = CORS(app)
app.config['CORS_HEADERS'] = 'Content-Type'
clf = pickle.load(open('model.pkl', 'rb'))
scaler = pickle.load(open('scaler.pkl', 'rb'))

@app.route('/')
def index():
    return 'OK'

@app.route('/distance')
def distance(origin, destination):
    lat1, lon1 = origin
    lat2, lon2 = destination
    radius = 6371 # km
    dlat = math.radians(lat2-lat1)
    dlon = math.radians(lon2-lon1)
    a = math.sin(dlat/2) * math.sin(dlat/2) + math.cos(math.radians(lat1)) \
        * math.cos(math.radians(lat2)) * math.sin(dlon/2) * math.sin(dlon/2)
    c = 2 * math.atan2(math.sqrt(a), math.sqrt(1-a))
    d = radius * c
    return d

@app.route('/predict',methods=['GET','POST'])
def predict():
    if request.args.get("uprange") != None and request.args.get("downrange") != None :
        uprange = float(request.args.get("uprange"))
        downrange = float(request.args.get("downrange"))
    else :
        uprange = 1.05
        downrange = 0.95
    landsize = float(request.args.get("area"))
    numfloor = float(request.args.get("floor"))
    lat1 = float(request.args.get("lat"))
    lon1 = float(request.args.get("long"))
    housetype = request.args.get("housetype")
    amphurid = request.args.get("amphurid")

    d = {'landarea_total_sqw': [0], 'floorcheck': [0],
    'Dept_km1': [0],'BTS_km1': [0],'MRT_km1': [0],'house_type_6': [0],'house_type_9': [0],'house_type_197' : [0],
    'amphur_id_1' :[0],'amphur_id_2' :[0],'amphur_id_3' :[0],'amphur_id_4' :[0],'amphur_id_5' :[0],
    'amphur_id_6' :[0],'amphur_id_7':[0],'amphur_id_8' :[0],'amphur_id_9' :[0], 'amphur_id_10' :[0],
    'amphur_id_11' :[0],'amphur_id_12' :[0],'amphur_id_13' :[0],'amphur_id_14' :[0],
    'amphur_id_15' :[0],'amphur_id_16' :[0],'amphur_id_17' :[0],'amphur_id_18' :[0],'amphur_id_19' :[0],
    'amphur_id_20' :[0],'amphur_id_21' :[0],'amphur_id_22' :[0],'amphur_id_23' :[0],'amphur_id_24' :[0],
    'amphur_id_25' :[0], 'amphur_id_26' :[0],'amphur_id_27' :[0],'amphur_id_28' :[0],'amphur_id_29' :[0],
    'amphur_id_30' :[0],'amphur_id_31' :[0],'amphur_id_32' :[0],'amphur_id_33' :[0],'amphur_id_34' :[0],
    'amphur_id_35' :[0],'amphur_id_36' :[0],'amphur_id_37' :[0],'amphur_id_38' :[0],'amphur_id_39' :[0],
    'amphur_id_40' :[0],'amphur_id_41' :[0],'amphur_id_42' :[0],'amphur_id_43' :[0],'amphur_id_44' :[0],
    'amphur_id_45' :[0],'amphur_id_46' :[0],'amphur_id_47' :[0],'amphur_id_48' :[0],'amphur_id_49' :[0],
    'amphur_id_50' :[0],'amphur_id_52' :[0],'amphur_id_53' :[0],'amphur_id_54' :[0],'amphur_id_55' :[0],
    'amphur_id_56' :[0],'amphur_id_57' :[0], 'amphur_id_58':[0],'amphur_id_59' :[0],'amphur_id_60' :[0],
    'amphur_id_61' :[0],'amphur_id_62' :[0],'amphur_id_63' :[0],'amphur_id_66' :[0],'amphur_id_67' :[0],
    'amphur_id_68' :[0],'amphur_id_69' :[0],'amphur_id_70' :[0],'amphur_id_71' :[0],'amphur_id_72' :[0],
    'amphur_id_807' :[0],'amphur_id_808' :[0],'amphur_id_809' :[0],'amphur_id_810' :[0],'amphur_id_811' :[0],
    'amphur_id_812' :[0], 'amphur_id_813' :[0],'amphur_id_814' :[0],'amphur_id_815' :[0],'amphur_id_816' :[0]}
    df = pd.DataFrame(data=d)
    lathyper = [13.727193,13.92604,13.704625,13.75544,13.791277,13.650541,13.688559,13.891197,13.699045,13.844742,13.668152,13.678574,13.683246,13.603807,13.651405,13.651095,13.990783,13.959725,14.032738,14.025875,13.74709,13.810332,13.785085,13.93466,13.826739,13.648954,13.584362,13.791524,13.638595,13.653869,13.808027,13.816972,13.854372,13.75545,13.732718,13.706583,13.708912,13.727055,13.8941,13.826858,13.812536,13.706613,13.844732,13.880295,13.883106,13.860568,13.905765,13.985356,14.005233,13.990786,13.959722,14.02584,14.122667,14.032681,13.934074,13.93428,13.584363,13.603804,13.648784,13.648963,13.650557,13.638625,13.565182,13.559793,13.410779,13.692038,13.748184,13.64767,13.696544,13.717677,13.760411,13.71264,13.768131,13.677387,13.805766,13.817058,13.817902,13.87935,13.776692,13.825416,13.806913,13.801914,13.824047,13.788287,13.895614,13.704742,13.737281,13.851554,13.717942,13.85467,13.703598,13.808163,13.792907,13.742991,13.991908,13.785211,14.015811,13.861718,13.823882,13.823705,13.924018,14.020454,13.993945,14.001677,14.034045,13.936216,13.946823,14.120573,14.066706,13.633123,13.653189,13.587546,13.521063,13.620961,13.576837,13.563156,13.655831,13.402059,13.765946,13.670587,13.76198,13.709792,13.791216,13.811258,13.702779,13.699329,13.768477,13.856438,13.921663,13.824466,13.706041,13.678368,13.775989,13.731589,13.770779,13.65483,13.811525,13.718904,13.710864,13.682152,13.722455,13.753895,13.805903,13.801877,13.894603,13.828632,13.926329,14.030638,13.974375,14.06705,13.963077,13.650084,13.634866,13.540993,13.568835]
    lonhyper = [100.585667,100.589526,100.321906,100.612994,100.513016,100.596346,100.43206,100.606144,100.482915,100.5114,100.635766,100.435979,100.492606,100.708003,100.420476,100.420467,100.618538,100.619827,100.662737,100.743341,100.540947,100.736984,100.612313,100.714528,100.528241,100.640721,100.607602,100.549192,100.593662,100.522257,100.726655,100.719804,100.854739,100.612994,100.492716,100.281214,100.367204,100.585703,100.560164,100.680147,100.072495,100.28122,100.511402,100.411317,100.407637,100.503656,100.514839,100.319314,100.519438,100.618537,100.619808,100.7433414,100.617087,100.662746,100.714452,100.682295,100.607601,100.708007,100.680752,100.640722,100.596369,100.593667,100.273869,100.292109,100.019973,100.648087,100.524557,100.4191,100.541304,100.56876,100.565536,100.418934,100.643958,100.501089,100.535072,100.728024,100.563835,100.599984,100.477916,100.65968,100.725186,100.613852,100.590104,100.502203,100.556073,100.600377,100.635689,100.859759,100.670441,100.6407,100.44663,100.052683,100.171685,100.219899,99.997022,100.298299,100.176176,100.518819,100.410033,100.480717,100.411532,100.526448,100.612642,100.681182,100.7666,100.736227,100.644888,100.616994,100.629336,100.710906,100.679004,100.78725,100.668326,100.620371,100.271813,100.279654,100.272835,100.006579,100.640309,100.408072,100.470098,100.535369,100.513013,100.696246,100.44561,100.646314,100.605259,100.855233,100.682882,100.592629,100.382383,100.615855,100.674579,100.581387,100.614399,100.498645,100.653244,100.595602,100.611296,100.491867,100.727974,100.6251,100.008813,100.305234,100.548387,100.48413,100.409416,100.524998,100.616497,100.633156,100.642548,100.642155,100.71198,100.619534,100.30335]
    latshop = [13.718592,13.80594,13.745246,13.764246,13.761604,13.705704,13.761606,13.743756,13.803306,13.746637,13.876637,13.758492,13.903513,13.669691,13.777998,13.663815,13.697581,13.572759,13.866263,13.872242,13.8163,13.786719,13.750317,13.713575,13.713702,13.766066,13.752764,13.855572,13.747809,13.730228,13.705152,13.770541,13.737947,13.688767,13.745243,13.646732,13.647237,13.743688,13.704402,13.730662,13.731982,13.744775,13.732523,13.860342,13.76653,13.674023,13.727048,13.825603,13.751026,13.721143,13.940005,13.583606,13.726314,13.723386,13.759795,13.653838,13.73282,13.76004,13.756868,13.711643,13.693967,13.803567,13.728394,13.691313,13.78812,13.689946,13.689994,13.802667,13.730182,13.685135,13.76378,13.811881,13.961499,13.883958,13.912742,13.988732,13.988842,13.74667,13.746666,13.698211,13.746934,13.746934,13.745756,13.744976,13.733564,13.748243,13.72823,13.789695,13.744004,13.753678,13.785095]
    longshop =[100.585394,100.523952,100.540788,100.539332,100.537099,100.601709,100.537101,100.546592,100.614677,100.539335,100.41208,100.566149,100.528249,100.634709,100.47653,100.439197,100.537584,100.288953,100.49742,100.601943,100.560995,100.2761,100.542018,100.48007,100.407958,100.642491,100.609549,100.542038,100.541234,100.513205,100.491161,100.572278,100.56047,100.505481,100.502499,100.680105,100.679346,100.544168,100.503209,100.568962,100.569684,100.529954,100.566471,100.518557,100.569517,100.609885,100.494957,100.678796,100.572167,100.724644,100.55327,100.609633,100.51004,100.528248,100.53803,100.784764,100.530495,100.569147,100.565861,100.434169,100.648837,100.61834,100.537385,100.5045,100.482912,100.647686,100.647628,100.551415,100.513209,100.611046,100.537876,100.619421,100.62157,100.410168,100.551935,100.617648,100.617473,100.531492,100.531484,100.835202,100.534987,100.534987,100.531658,100.533881,100.52824,100.56454,100.535139,100.515301,100.541394,100.541335,100.612719]
    latBts = [13.7055818,13.7152036,13.719444,13.724275,13.730459,13.73653,13.740069,13.742792,13.744259,13.745799,13.751856,13.756615,13.763435,13.772362,13.779092,13.793531,13.803247,13.745767,13.739382,13.728344,13.724606,13.719181,13.718797,13.720604,13.72079,13.718912,13.7139281,13.696537,13.689317,13.679426,13.668572,13.660761,13.712407,13.720721]
    lonBts = [100.6010774,100.5912344,100.585295,100.578567,100.56961,100.56098,100.556059,100.550186,100.542428,100.533023,100.531628,100.533726,100.537381,100.542082,100.544345,100.549707,100.554304,100.530558,100.539535,100.533713,100.529102,100.521693,100.515011,100.503668,100.494825,100.485666,100.4768659,100.605554,100.609109,100.609374,100.604938,100.601744,100.470804,100.457752]
    latmrt = [13.737657,13.732771,13.729221,13.72639,13.722373,13.723614,13.738634,13.749439,13.757622,13.767223,13.779241,13.789126,13.799712,13.805762,13.814099,13.803612,13.797573,13.803481,13.820776,13.829142,13.806398,13.742134,13.747165,13.743882,13.738498,13.729691,13.724596,13.720146,13.715467,13.712914,13.712022,13.710827,13.740198,13.755785,13.763351,13.777377,13.783872,13.792431,13.798959,13.806402,13.8396009,13.8483826,13.8602055,13.866341,13.8659969,13.8704075,13.8705384,13.8748298,13.8766525,13.8757776,13.8747048,13.8809229,13.892515]
    lonmrt = [100.517083,100.529276,100.536394,100.544824,100.554077,100.560125,100.561628,100.563541,100.565399,100.571253,100.573562,100.574286,100.574785,100.57405,100.560417,100.554518,100.547791,100.539281,100.532561,100.527454,100.530834,100.510096,100.502043,100.494651,100.48527,100.474175,100.465159,100.457008,100.445573,100.43441,100.42242,100.409497,100.470805,100.469431,100.473465,100.485363,100.493489,100.50503,100.509928,100.521055,100.5151391,100.5147421,100.5133796,100.493572,100.4942286,100.4803311,100.4667628,100.4559642,100.4450047,100.4337931,100.4193413,100.4092348,100.4082102]
    dshop = 0
    dbts = 0
    dmrt = 0
    zshop=1000
    zbts=1000
    zmrt=1000
    for x in range(91):
        dshop = distance((lat1, lon1), (latshop[x], longshop[x]))
        if dshop < zshop:
            zshop = dshop
    for x in range(34):
        dbts = distance((lat1, lon1), (latBts[x], lonBts[x]))
        if dbts < zbts:
            zbts = dbts
    for x in range(53):
        dmrt = distance((lat1, lon1), (latmrt[x], lonmrt[x]))
        if dmrt < zmrt:
            zmrt = dmrt
    if zshop < 2:
        zshop = 1
    elif zshop < 4:
        zshop = 2
    elif zshop < 6:
        zshop = 3
    elif zshop < 8:
        zshop = 4
    else:
        zshop = 5
    if zbts < 2:
        zbts = 1
    elif zbts < 4:
        zbts = 2
    elif zbts < 6:
        zbts = 3
    else:
        zbts = 4
    if zmrt < 2:
        zmrt = 1
    elif zmrt< 4:
        zmrt = 2
    elif zmrt< 6:
        zmrt = 3
    else:
        zmrt = 4
    df.at[0,'landarea_total_sqw']= landsize
    df.at[0,'floorcheck'] = numfloor
    df.at[0,'house_type_' + str(housetype)] = 1
    df.at[0,'amphur_id_' + str(amphurid)] = 1
    df.at[0,'Dept_km1'] = zshop
    df.at[0,'BTS_km1'] = zbts
    df.at[0,'MRT_km1'] = zmrt
    df['landarea_total_sqw'] = np.log(df['landarea_total_sqw'])
    df_scal = scaler.transform(df)
    df_pred = clf.predict(df_scal)
    price = np.exp(df_pred[0])
    result = price
    upresult = round((result*uprange),-5)
    downresult = round((result*downrange),-5)
    result = [downresult,upresult]
    return jsonify({'down':downresult,'up':upresult})

if __name__ == "__main__":
    app.run()
